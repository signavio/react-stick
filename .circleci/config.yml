version: 2.1

orbs:
  fortify: signavio/fortify@2.0.0
  blackduck: signavio/blackduck@1.16.4
  codecov: codecov/codecov@3.3.0

executors:
  fortify:
    machine:
      image: &ubuntu "ubuntu-2204:current"
    resource_class: medium

commands:

  install_tools:
    steps:
      - run:
          name: "Install tools"
          command: | 
            apt-get -y update && apt-get install -y git curl
            # cypress requirements
            apt-get -y install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2 libxtst6 xauth xvfb

  fortify_scan:
    parameters:
      build_id:
        type: string
      path:
        type: string
      translate_opts:
        type: string
        default: ""
    steps:
      - fortify/setup
      - run:
          name: Fortify translate << parameters.build_id >>
          command: sourceanalyzer -b << parameters.build_id >> -verbose << parameters.translate_opts >> << parameters.path >>
      - run:
          name: Fortify scan << parameters.build_id >>
          command: sourceanalyzer -b << parameters.build_id >> -verbose -scan -f << parameters.build_id >>.fpr
      - run:
          name: "Fortify: upload"
          command: |
            fortifyclient \
               -url "$FORTIFY_SSC" \
               -authtoken "$SSC_API_TOKEN" \
               uploadFPR \
               -file << parameters.build_id >>.fpr \
               -project signavio-react-stick \
               -version production

references:
  defaults: &defaults
    working_directory: ~/repo
    docker:
      # use SAP Approved Build Container for gradle / jdk
      - image: node:20-slim

  restore_cache: &restore_cache
    restore_cache:
      keys:
        - deps-v5-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - deps-v5-{{ .Branch }}
        - deps-v5

jobs:
  install:
    <<: *defaults

    steps:
      - checkout
      - install_tools

      - *restore_cache

      - run: npm ci --force

      - save_cache:
          key: deps-v5-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache/Cypress

  lint:
    <<: *defaults

    steps:
      - checkout
      - install_tools

      - *restore_cache

      - run:
          name: Lint
          command: npm run lint

  test:
    <<: *defaults
    steps:
      - checkout
      - install_tools

      - *restore_cache

      - run:
          name: Test
          command: npm run test

  release:
    <<: *defaults
    steps:
      - checkout
      - install_tools
      - *restore_cache
      - run:
          name: Fix host authenticity for github.com
          command: mkdir -p ~/.ssh/ && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Build
          command: npm run build
      - run:
          name: Release
          command: npm run semantic-release

  fortify_scan:
    executor: fortify
    steps:
      - checkout
      - fortify_scan:
          build_id: signavio-react-stick
          path: src

  lint_commit_message:
    <<: *defaults
    steps:
      - checkout
      - install_tools
      - *restore_cache
      - run:
          name: Define environment variable with lastest commit's message
          command: |
            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Lint commit message
          command: echo "$COMMIT_MESSAGE" | npx commitlint

workflows:
  version: 2
  qa-publish-release:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
          filters:
            branches:
              ignore: master
          post-steps:
            - codecov/upload:
              file: tests/coverage/clover.xml
      - lint_commit_message:
          requires:
            - install
      - release:
          context: NPM
          requires:
            - install
            - lint_commit_message
          filters:
            branches:
              only: master

  blackduck-nightly-scan:
    triggers:
      - schedule:
          cron: "0 0 * * *" # UTC
          filters:
            branches:
              only: master
    jobs:
      - install:
          context: ECR
      - blackduck/blackduck-scan:
          context:
            - ECR
            - BlackDuck
          blackduck-project-group: SAP_Signavio_Process_Governance
          blackduck-project-name: react-stick
          blackduck-project-path: /home/circleci/project
          requires:
            - install

  # Run fortify scan twice a month schedueled
  schedueled_fortify_scan:
    triggers:
      - schedule:
          # every 1st and 15th of the month
          cron: "0 0 1,15 * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - fortify_scan:
          context: fortify

  # Run fortify scan on demand
  on_demand_fortify_scan:
    jobs:
      - approve-fortify-scan:
          type: approval
          filters:
            branches:
              only:
                - master
      - fortify_scan:
          requires:
            - approve-fortify-scan
          context:
            - fortify
